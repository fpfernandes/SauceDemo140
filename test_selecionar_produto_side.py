# Generated by Selenium IDE - Updated and Fixed
import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options

options = Options()
prefs = {
    "credentials_enable_service": False,
    "profile.password_manager_enabled": False
}
options.add_experimental_option("prefs", prefs)


class TestSelecionarProduto():
    def setup_method(self, method):
        self.driver = webdriver.Chrome(options=options)
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_selecionarProduto(self):
        self.driver.get("https://www.saucedemo.com/")
        self.driver.set_window_size(1552, 832)


        # Login
        self.driver.find_element(By.CSS_SELECTOR, ".login_credentials_wrap-inner").click()
        self.driver.find_element(By.CSS_SELECTOR, "*[data-test='username']").click()
        self.driver.find_element(By.CSS_SELECTOR, "*[data-test='username']").send_keys("standard_user")
        self.driver.find_element(By.CSS_SELECTOR, ".login_password").click()
        self.driver.find_element(By.CSS_SELECTOR, "*[data-test='password']").click()
        self.driver.find_element(By.CSS_SELECTOR, "*[data-test='password']").send_keys("secret_sauce")
        self.driver.find_element(By.CSS_SELECTOR, "*[data-test='login-button']").click()

        # Verify we're on the products page
        assert self.driver.find_element(By.CSS_SELECTOR, ".title").text == "Products"
        assert self.driver.find_element(By.CSS_SELECTOR, "#item_4_title_link > .inventory_item_name").text == "Sauce Labs Backpack"
        assert self.driver.find_element(By.CSS_SELECTOR, ".inventory_item:nth-child(1) .inventory_item_price").text == "$29.99"

        # Add product to cart
        self.driver.find_element(By.CSS_SELECTOR, "*[data-test='add-to-cart-sauce-labs-backpack']").click()

        # Wait for cart badge to show '1'
        WebDriverWait(self.driver, 5).until(
            EC.text_to_be_present_in_element((By.CLASS_NAME, "shopping_cart_badge"), "1")
        )
        assert self.driver.find_element(By.CLASS_NAME, "shopping_cart_badge").text == "1"

        # Click on the cart icon (not the badge)
        self.driver.find_element(By.CSS_SELECTOR, ".shopping_cart_link").click()

        # Wait until 'Your Cart' appears
        WebDriverWait(self.driver, 5).until(
            EC.text_to_be_present_in_element((By.CSS_SELECTOR, ".title"), "Your Cart")
        )
        assert self.driver.find_element(By.CSS_SELECTOR, ".title").text == "Your Cart"

        # Confirm cart contents
        assert self.driver.find_element(By.CSS_SELECTOR, ".cart_quantity").text == "1"
        assert self.driver.find_element(By.CSS_SELECTOR, ".inventory_item_name").text == "Sauce Labs Backpack"
        assert self.driver.find_element(By.CSS_SELECTOR, ".inventory_item_price").text == "$29.99"

        # Remove item and logout
        self.driver.find_element(By.CSS_SELECTOR, "*[data-test='remove-sauce-labs-backpack']").click()
        self.driver.find_element(By.ID, "react-burger-menu-btn").click()

        # Wait for logout button to become clickable
        WebDriverWait(self.driver, 5).until(
            EC.element_to_be_clickable((By.ID, "logout_sidebar_link"))
        )
        self.driver.find_element(By.ID, "logout_sidebar_link").click()


        

  
